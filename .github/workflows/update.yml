name: Download and Update dat File

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # 每天凌晨触发

env:
  FILE_URL: ${{ secrets.DAT_FILE_URL }}  # 从GitHub环境变量中获取下载链接

jobs:
  update-dat-file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download dat file
        run: |
          wget -O qqwry.dat "${{ env.FILE_URL }}"
        
      - name: Calculate new file hash
        id: calculate_new_hash
        run: |
          echo "NEW_HASH=$(sha256sum qqwry.dat | awk '{ print $1 }')" >> $GITHUB_ENV

      - name: Check if dat file exists in repository
        id: check_file_existence
        run: |
          if [ -f qqwry.dat ]; then
            echo "File exists"
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "File does not exist"
            echo "EXISTS=false" >> $GITHUB_ENV

      - name: Calculate repository file hash
        if: steps.check_file_existence.outputs.EXISTS == 'true'
        id: calculate_repo_hash
        run: |
          echo "REPO_HASH=$(sha256sum qqwry.dat | awk '{ print $1 }')" >> $GITHUB_ENV

      - name: Compare file hashes
        id: compare_hashes
        run: |
          if [ "${{ steps.check_file_existence.outputs.EXISTS }}" == "true" ] && [ "${{ env.NEW_HASH }}" == "${{ env.REPO_HASH }}" ]; then
            echo "File has not changed"
            echo "FILE_CHANGED=false" >> $GITHUB_ENV
          else
            echo "File has changed"
            echo "FILE_CHANGED=true" >> $GITHUB_ENV

      - name: Replace dat file
        if: steps.compare_hashes.outputs.FILE_CHANGED == 'true'
        run: |
          mv app/qqwry.dat qqwry.dat

      - name: Commit and push changes
        if: steps.compare_hashes.outputs.FILE_CHANGED == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add qqwry.dat
          git commit -m "Update qqwry.dat in  ${{ env.dat_date }}"
          git push origin main

      - name: Create a new release
        if: steps.compare_hashes.outputs.FILE_CHANGED == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: "v$(date +'%Y%m%d%H%M%S')"
          release_name: "Update dat file $(date +'%Y-%m-%d %H:%M:%S')"
          body: |
           #### qqwry.dat

           | Name               | Value                      |
           | :----------------: | :------------------------: |
           | Zip Download link: | https://raw.githubusercontent.com/FW27623/qqwry/main/qqwry.dat        |
           | File hash:         | qqwry.dat: ${{ env.NEW_HASH }} |

           <p align="right"><code>Version: ${{ env.NEW_HASH }} </code></p>
          draft: false
          prerelease: false
          files: qqwry.dat
          token: ${{ secrets.qqwry }}
